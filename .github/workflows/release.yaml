name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger this workflow when a tag starting with 'v' is pushed
      
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2
      # extract tag name
      - name: Extract tag name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV  # Set the tag name as an environment variable for later use
      # add version to release json
      - name: Perform string replacement in file
        run: |
          sed -i 's/{version}/${{ env.TAG_NAME }}/g' release.json
      # create temp dirs
      - name: Create a new directory
        run: |
          mkdir -p publish
          mkdir -p publish/RCLootCouncil_AddRollAlert
      - name: Zip the repository contents
        run: |
          # Use rsync to copy all contents, excluding the 'publish' folder and dot folders
          rsync -av --exclude='publish/' --exclude='.*' ./ publish/RCLootCouncil_AddRollAlert          
          cd publish && zip -r "RCLootCouncil_AddRollAlert-${{ env.TAG_NAME }}.zip" RCLootCouncil_AddRollAlert/*
      # Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
      # Attach zip to release 
      - name: Upload Release Asset
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: publish/RCLootCouncil_AddRollAlert-${{ env.TAG_NAME }}.zip
          asset_name: RCLootCouncil_AddRollAlert-${{ env.TAG_NAME }}.zip
          asset_content_type: application/zip
      # Attach zip to release 
      - name: Upload Release Asset
        id: upload-release-json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: release.json
          asset_name: release.json
          asset_content_type: application/json